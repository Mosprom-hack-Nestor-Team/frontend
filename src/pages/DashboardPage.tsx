import {
  Box,
  Container,
  Heading,
  SimpleGrid,
  Text,
  Stack,
  Badge,
  For,
} from '@chakra-ui/react';

interface StatCardProps {
  title: string;
  value: string;
  change: string;
  isPositive: boolean;
}

const StatCard = ({ title, value, change, isPositive }: StatCardProps) => {
  return (
    <Box
      bg="white"
      shadow="md"
      p={6}
      rounded="lg"
      _hover={{ shadow: 'xl', transform: 'translateY(-2px)', transition: 'all 0.3s' }}
    >
      <Stack gap={2}>
        <Text color="gray.600" fontSize="sm">
          {title}
        </Text>
        <Text fontSize="3xl" fontWeight="bold">
          {value}
        </Text>
        <Text fontSize="sm" color={isPositive ? 'green.500' : 'red.500'}>
          {isPositive ? '‚Üë' : '‚Üì'} {change}
        </Text>
      </Stack>
    </Box>
  );
};

interface TaskCardProps {
  title: string;
  progress: number;
  status: string;
}

const TaskCard = ({ title, progress, status }: TaskCardProps) => {
  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active':
        return 'green';
      case 'pending':
        return 'yellow';
      case 'completed':
        return 'blue';
      default:
        return 'gray';
    }
  };

  return (
    <Box bg="white" shadow="md" p={6} rounded="lg">
      <Stack gap={3}>
        <Box display="flex" justifyContent="space-between" alignItems="center">
          <Text fontWeight="semibold">{title}</Text>
          <Badge colorPalette={getStatusColor(status)}>{status}</Badge>
        </Box>
        <Box>
          <Text fontSize="sm" color="gray.600" mb={2}>
            –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}%
          </Text>
          <Box bg="gray.200" rounded="full" h="8px" overflow="hidden">
            <Box
              bg={`${getStatusColor(status)}.500`}
              h="full"
              w={`${progress}%`}
              transition="width 0.3s"
            />
          </Box>
        </Box>
      </Stack>
    </Box>
  );
};

export const DashboardPage = () => {
  const stats = [
    { title: '–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value: '1,234', change: '12%', isPositive: true },
    { title: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã', value: '45', change: '8%', isPositive: true },
    { title: '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á', value: '892', change: '23%', isPositive: true },
    { title: '–î–æ—Ö–æ–¥', value: '$12,345', change: '5%', isPositive: false },
  ];

  const tasks = [
    { title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞', progress: 75, status: 'active' },
    { title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API', progress: 50, status: 'active' },
    { title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏', progress: 30, status: 'pending' },
    { title: '–ö–æ–¥-—Ä–µ–≤—å—é', progress: 100, status: 'completed' },
  ];

  return (
    <Container maxW="container.xl" py={10}>
      <Stack gap={8}>
        <Box>
          <Heading mb={2}>Dashboard</Heading>
          <Text color="gray.600">
            –û–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
          </Text>
        </Box>

        {/* Statistics */}
        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} gap={6}>
          <For each={stats}>
            {(stat, index) => (
              <StatCard key={index} {...stat} />
            )}
          </For>
        </SimpleGrid>

        {/* Tasks */}
        <Box>
          <Heading size="md" mb={4}>
            –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏
          </Heading>
          <SimpleGrid columns={{ base: 1, md: 2 }} gap={4}>
            <For each={tasks}>
              {(task, index) => (
                <TaskCard key={index} {...task} />
              )}
            </For>
          </SimpleGrid>
        </Box>

        {/* Additional Info */}
        <Box bg="blue.50" shadow="md" p={6} rounded="lg">
          <Stack gap={3}>
            <Heading size="sm">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</Heading>
            <Text color="gray.700">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
              –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
            </Text>
          </Stack>
        </Box>
      </Stack>
    </Container>
  );
};
