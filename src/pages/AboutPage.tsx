import {
  Box,
  Container,
  Heading,
  Text,
  Stack,
  SimpleGrid,
  Flex,
  For,
} from '@chakra-ui/react';
import { FiCheckCircle } from 'react-icons/fi';

interface TeamMemberProps {
  name: string;
  role: string;
}

const TeamMember = ({ name, role }: TeamMemberProps) => {
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
  const getInitials = (name: string) => {
    return name
      .split(' ')
      .map(n => n[0])
      .join('')
      .toUpperCase();
  };

  return (
    <Box
      bg="white"
      shadow="md"
      p={6}
      rounded="lg"
      _hover={{ shadow: 'xl', transform: 'translateY(-2px)', transition: 'all 0.3s' }}
    >
      <Stack align="center" gap={4}>
        <Flex
          w={20}
          h={20}
          bg="blue.500"
          color="white"
          rounded="full"
          align="center"
          justify="center"
          fontSize="2xl"
          fontWeight="bold"
        >
          {getInitials(name)}
        </Flex>
        <Box textAlign="center">
          <Text fontWeight="bold" fontSize="lg">
            {name}
          </Text>
          <Text color="gray.600" fontSize="sm">
            {role}
          </Text>
        </Box>
      </Stack>
    </Box>
  );
};

export const AboutPage = () => {
  const advantages = [
    '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
    '–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö',
    '–ù–∞–¥–µ–∂–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
    '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    '–ì–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
  ];

  const team = [
    { name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', role: 'CEO & Founder' },
    { name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', role: 'CTO' },
    { name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', role: 'Lead Developer' },
    { name: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', role: 'UI/UX Designer' },
  ];

  const technologies = ['React', 'TypeScript', 'Chakra UI', 'FastAPI', 'PostgreSQL', 'Docker'];

  return (
    <Container maxW="container.xl" py={10}>
      <Stack gap={12}>
        {/* Header */}
        <Box textAlign="center">
          <Heading
            fontSize={{ base: '3xl', md: '5xl' }}
            bgGradient="to-r"
            gradientFrom="blue.400"
            gradientTo="purple.500"
            bgClip="text"
            mb={4}
          >
            –û –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ
          </Heading>
          <Text
            fontSize={{ base: 'md', md: 'lg' }}
            color="gray.600"
            maxW="3xl"
            mx="auto"
          >
            –ú—ã —Å–æ–∑–¥–∞–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
            –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
          </Text>
        </Box>

        {/* Mission */}
        <Box bg="white" shadow="lg" p={8} rounded="lg">
          <Stack gap={6}>
            <Heading size="lg">–ù–∞—à–∞ –º–∏—Å—Å–∏—è</Heading>
            <Text color="gray.700" fontSize="md">
              –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏,
              –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –∫–æ–º–ø–∞–Ω–∏—è–º –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
              –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏. –ú—ã –≤–µ—Ä–∏–º –≤ —Å–∏–ª—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–¥–µ–ª–∞—Ç—å –∏—Ö
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã–º –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–º.
            </Text>
            
            <Box borderTop="1px" borderColor="gray.200" pt={6}>
              <Heading size="md" mb={4}>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</Heading>
              <Stack gap={3}>
                <For each={advantages}>
                  {(advantage, index) => (
                    <Flex key={index} align="center" gap={3}>
                      <Box color="green.500" fontSize="xl">
                        <FiCheckCircle />
                      </Box>
                      <Text>{advantage}</Text>
                    </Flex>
                  )}
                </For>
              </Stack>
            </Box>
          </Stack>
        </Box>

        {/* Team */}
        <Box>
          <Heading size="lg" mb={2} textAlign="center">
            –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞
          </Heading>
          <Text
            textAlign="center"
            color="gray.600"
            mb={8}
          >
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç –±—É–¥—É—â–µ–µ
          </Text>
          <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} gap={6}>
            <For each={team}>
              {(member, index) => (
                <TeamMember key={index} {...member} />
              )}
            </For>
          </SimpleGrid>
        </Box>

        {/* Technologies */}
        <Box bg="purple.50" shadow="md" p={6} rounded="lg">
          <Stack gap={4}>
            <Heading size="md">üöÄ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</Heading>
            <Text color="gray.700">
              –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π: React, TypeScript, Chakra UI,
              FastAPI, PostgreSQL –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –ù–∞—à –∫–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º
              –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–µ—Ç—Å—è.
            </Text>
            <Flex gap={2} wrap="wrap">
              <For each={technologies}>
                {(tech, index) => (
                  <Box
                    key={index}
                    px={4}
                    py={2}
                    bg="blue.500"
                    color="white"
                    rounded="full"
                    fontSize="sm"
                    fontWeight="semibold"
                  >
                    {tech}
                  </Box>
                )}
              </For>
            </Flex>
          </Stack>
        </Box>
      </Stack>
    </Container>
  );
};
